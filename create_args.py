def create_args(parser):
    parser.add_argument('--train_dataset_dir', default='/media/xzz/data/datasets/bsds_voc', type=str)
    parser.add_argument('--test_dataset_dir', default='./data', type=str)
    parser.add_argument('--output', default='output', type=str)
    parser.add_argument('--trainlist', default='bsds_pascal_train_pair.lst', type=str)
    parser.add_argument('--mean_pixel_value', default=[104.00698793, 116.66876762, 122.67891434])
    parser.add_argument('--train_batch_size', default=1, type=int)
    parser.add_argument('--itersize', default=10, type=int)
    parser.add_argument('--test_batch_size', default=1, type=int)
    parser.add_argument('--test', default=False, help='test the model only. ', action='store_true')
    parser.add_argument('--SGD', default=False, action='store_true')
    parser.add_argument('--pretrained', default='', type=str)
    parser.add_argument('--pretrained_imagenet', default='', type=str)
    parser.add_argument('--start_epoch', default=0, type=int, metavar='N')
    parser.add_argument('--max_epoch', default=60, type=int, metavar='N', help='Total epochs')
    parser.add_argument('--print_freq', default=500, type=int, metavar='N', help='print frequency')
    parser.add_argument('--lr', default=1e-4, type=float, metavar='F', help='initial learning rate')
    parser.add_argument('--lr_stepsize', default=16, type=int, metavar='N', help='learning rate step size')
    parser.add_argument('--lr_gamma', default=0.1, type=float, metavar='F', help='learning rate decay (gamma)')
    parser.add_argument('--momentum', default=0.9, type=float, metavar='F', help='momentum')
    parser.add_argument('--weight_decay', default=2e-4, type=float, metavar='F', help='weight decay.')
    parser.add_argument('--checkpoint', default='', help='resume the checkpoint.')
    parser.add_argument('--cpu', default=False, help='Enable CPU mode.', action='store_true')
    parser.add_argument('--organize_lr', default=False, action='store_true')
    parser.add_argument('--use_sgd', default=True, action='store_false')
    parser.add_argument('--alphaw', default=10, type=float)
    parser.add_argument('--betaw', default=10, type=float)
    parser.add_argument('--gammaw', default=10, type=float)
    args=parser.parse_args()
    return args